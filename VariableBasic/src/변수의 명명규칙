변수의 명명규칙

1. 대소문자가 구분되며 길이에 제한이 없다
True와 true는 서로 다른 것으로 간주된다

2. 예약어를 사용해서는 안 된다
true는 예약어라서 사용할 수 없지만 True는 가능하다

3. 숫자로 시작해서는 안된다
top10은 허용하지만, 7up은 허용되지 않는다

4. 특수문자는 '_'와'$'만을 허용한다
$sarp은 허용되지만, S#arp은 허용되지 않는다


클래스의 명명규칙
1. 클래스 이름의 첫글자는 항상 대문자로 한다
-변수와 메서드의 이름의 첫글자는 항상 소문자로 한다.

2. 여러 단어로 이루어진 이름은 단어의 첫글자를 대문자로 한다.
-lastIndexOf(앞글자 소문자니 변수명), StringBuffer(클래스명)
붙여서 쓰면 카멜표기법? 밑처럼 쓰는 건 파스칼 뭐시기.

3. 상수의 이름은 모두 대문자로 한다. 여러 단어로 이루어진 경우 '_'로 구분한다.
-PI, Max_NUMBER

위의 규칙들은 반드시 지켜야 하는 것은 아니지만, 코드를 보다 이해하기 쉽게 하기 위한
자바 개발자들 사이의 암묵적인 약속이다.
-> 미리 규칙을 정해놓고 프로그램 전체에 일관되게 적용하는 것이 필요하다.

변우싀 이름은 짧을수록 좋지만, 약간 길더라도 용도를 알기 쉽게
의미있는 이름으로 하는 것이 바람직하다.
이는 변수에 대한 정보를 알려주는 좋은 방법이다.



주석(comment)
프로그램 코드에 대한 이해를 돕는데 사용

// 한 줄 주석
// 부터 라인 끝까지의 내용을 주석으로 표현한다

/**/ 범위 주석
/* 와 */ 사이의 내용을 주석으로 표현한다

변수의 타입
기본형과 참조형

기본형(primitive type)
-논리형, 문자형, 정수형, 실수형
계산을 위한 실제 값을 저장한다(8개)

참조형(reference type)
-객체의 주소를 저장한다. 기본형을 제외한 나머지 타입

클래스이름 변수이름; // 변수의 타입이 클래스 이름인 것들은 모두 참조변수이다.


변수(variable): 하나의 값을 저장하기 위한 공간
상수(constant): 값을 한번만 저장할 수 있는 공간
리터럴(literal): 그 자체로 값을 의미하는 것

int year = 2014;
final int MAX_VALUE = 100;

year 변수
2014, 100 리터럴
MAX_VALUE 상수

문자열 + any type -> 문자열 + 문자열 -> 문자열
any type + 문자열 -> 문자열 + 문자열 -> 문자열
(근데 숫자가 먼저 오면 숫자끼리 더하고 문자화)



기본형

문자형 - char

인코딩(incoding) : 문자를 숫자로 (실행)

디코딩(decoding) : 숫자를 문자로 (복호화)






